module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  extends: [
    'eslint:recommended',
    'airbnb-base',
    'plugin:import/react',
    'plugin:react-hooks/recommended',
    'plugin:react/recommended',
    'prettier',
    'plugin:prettier/recommended',
  ],
  parser: '@babel/eslint-parser',
  parserOptions: {
    ecmaVersion: 12,
    ecmaFeatures: { jsx: true },
    sourceType: 'module',
  },
  plugins: ['react', 'react-hooks', 'import', 'prettier'],
  rules: {
    // Don't require prop-types.
    'react/prop-types': 'off',
    camelcase: [2, { properties: 'always' }],
    'class-methods-use-this': 0,
    'comma-dangle': [2, 'always-multiline'],
    'comma-spacing': [2, { after: true, before: false }],
    'consistent-return': 0,
    eqeqeq: 2,
    'import/imports-first': 1,
    'import/newline-after-import': 0,
    'import/no-dynamic-require': 0,
    'import/no-extraneous-dependencies': [2, { devDependencies: true }],
    'import/no-named-as-default': 0,
    'import/no-unresolved': 2,
    'import/no-webpack-loader-syntax': 0,
    'import/order': 2,
    'import/prefer-default-export': 0,
    'react/jsx-uses-vars': [2],
    'react/jsx-uses-react': [2],
    'react/jsx-filename-extension': 0,
    'react/no-unescaped-entitie': 0,
    'new-cap': [2, { newIsCap: true }],
    'no-bitwise': 0,
    'no-caller': 1,
    'no-console': 1,
    'no-continue': 0,
    'no-control-regex': 0,
    'no-invalid-regexp': 2,
    'no-plusplus': 0,
    'no-restricted-syntax': [2, 'ForInStatement', 'LabeledStatement', 'WithStatement'],
    'no-undef': 1,
    'no-underscore-dangle': 0,
    'no-unused-vars': [2, { args: 'after-used', vars: 'local' }],
    'no-use-before-define': 1,
    'prefer-template': 2,
    'require-yield': 0,
    // 'sort-keys': [
    //   2,
    //   'asc',
    //   {
    //     caseSensitive: true,
    //     natural: true,
    //   },
    // ],
    strict: [2, 'global'],
  },
  settings: {
    react: {
      pragma: 'React',
    },
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx'],
      },
    },
    react: {
      createClass: 'createReactClass',
      fragment: 'Fragment',
      pragma: 'React',
      version: 'detect',
    },
  },
};
